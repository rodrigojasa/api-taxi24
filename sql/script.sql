DROP DATABASE IF EXISTS TAXI24;

CREATE DATABASE TAXI24;
USE TAXI24;

DELIMITER $$
DROP TABLE IF EXISTS CONDUCTORES $$

CREATE TABLE CONDUCTORES(
	ID INT AUTO_INCREMENT NOT NULL COMMENT 'IDENTIFICADOR DEL CONDUCTOR'
	, NOMBRE VARCHAR(40) NOT NULL COMMENT 'NOMBRE DEL CONDUCTOR'
	, APELLIDOPATERNO VARCHAR(40) NOT NULL COMMENT 'APELLIDO PATERNO DEL CONDUCTOR'
	, APELLIDOMATERNO VARCHAR(40) NOT NULL COMMENT 'APELLIDO MATERNO DEL CONDUCTOR'
	, RFC VARCHAR(13) NOT NULL COMMENT 'RFC DEL CONDUCTOR'
	, FECHANACIMIENTO DATE NOT NULL COMMENT 'FECHA DE NACIMIENTO DEL CONDUCTOR'
	, TELEFONO VARCHAR(13) NOT NULL COMMENT 'TELEFONO DEL CONDUCTOR'
	, ENTIDADFEDERATIVA VARCHAR(40) NOT NULL COMMENT 'ENTIDAD FEDERATIVA DE RESIDENCIA DEL CONDUCTOR'
	, MUNICIPIO VARCHAR(40) NOT NULL COMMENT 'MUNICIPIO DE RESIDENCIA DEL CONDUCTOR'
	, ESTADO ENUM('1', '0') DEFAULT '1' NOT NULL COMMENT '0 - INACTIVO, 1 - ACTIVO'
	, DISPONIBILIDAD ENUM('1', '0') DEFAULT '1' NOT NULL COMMENT '0 - NO DISPOINBLE, 1 - DISPONIBLE'
	, LATITUD DECIMAL(18,15) NOT NULL DEFAULT 0 COMMENT 'LATITUD DE LA UBICACION ACTUAL'
	, LONGITUD DECIMAL(18,15) NOT NULL DEFAULT 0 COMMENT 'LONGITUD DE LA UBICACION ACTUAL'
	, PRIMARY KEY (ID)
	, CONSTRAINT UN_CONDUCTORES_RFC UNIQUE (RFC)
) COMMENT 'REGISTRO DE CONDUCTORES'; $$

INSERT INTO CONDUCTORES(NOMBRE, APELLIDOPATERNO, APELLIDOMATERNO, RFC, FECHANACIMIENTO, TELEFONO, ENTIDADFEDERATIVA, MUNICIPIO, LATITUD, LONGITUD)
VALUES ('REYNALDO', 'JACOME', 'SARABIA', 'JASR850507QS1', '1985-05-07', '2299456318', 'VERACRUZ', 'VERACRUZ', 19.18600439709124, -96.17652297585958)
		, ('REYNALDO2', 'JACOME2', 'SARABIA2', 'JASR850507QS2', '1985-05-08', '2299456312', 'VERACRUZ', 'VERACRUZ', 19.191070779452616, -96.1272132459484)
		, ('REYNALDO3', 'JACOME3', 'SARABIA3', 'JASR850507QS3', '1985-05-08', '2299456313', 'VERACRUZ', 'VERACRUZ', 19.18195117895931, -96.168454891244)
		, ('REYNALDO4', 'JACOME4', 'SARABIA4', 'JASR850507QS4', '1985-05-08', '2299456314', 'VERACRUZ', 'VERACRUZ', 19.181383720460214, -96.15639567966433)
		, ('REYNALDO5', 'JACOME5', 'SARABIA5', 'JASR850507QS5', '1985-05-08', '2299456315', 'VERACRUZ', 'VERACRUZ', 19.208437154568664, -96.14577413209861)
		, ('REYNALDO6', 'JACOME6', 'SARABIA6', 'JASR850507QS6', '1985-05-08', '2299456316', 'VERACRUZ', 'VERACRUZ', 19.19255013369592, -96.14680410034741)
		, ('REYNALDO7', 'JACOME7', 'SARABIA7', 'JASR850507QS7', '1985-05-08', '2299456317', 'VERACRUZ', 'VERACRUZ', 19.185497750285315, -96.13096833852214)
		, ('REYNALDO8', 'JACOME8', 'SARABIA8', 'JASR850507QS8', '1985-05-08', '2299456318', 'VERACRUZ', 'VERACRUZ', 19.201831258238027, -96.13946557657474)
;


DELIMITER $$
DROP TABLE IF EXISTS PASAJEROS $$

CREATE TABLE PASAJEROS(
	ID INT AUTO_INCREMENT NOT NULL COMMENT 'IDENTIFICADOR DEL PASAJERO'
	, NOMBRE VARCHAR(40) NOT NULL COMMENT 'NOMBRE DEL PASAJERO'
	, APELLIDOPATERNO VARCHAR(40) NOT NULL COMMENT 'APELLIDO PATERNO DEL PASAJERO'
	, APELLIDOMATERNO VARCHAR(40) NOT NULL COMMENT 'APELLIDO MATERNO DEL PASAJERO'
	, RFC VARCHAR(13) NOT NULL COMMENT 'RFC DEL PASAJERO'
	, FECHANACIMIENTO DATE NOT NULL COMMENT 'FECHA DE NACIMIENTO DEL PASAJERO'
	, TELEFONO VARCHAR(13) NOT NULL COMMENT 'TELEFONO DEL PASAJERO'
	, ENTIDADFEDERATIVA VARCHAR(40) NOT NULL COMMENT 'ENTIDAD FEDERATIVA DE RESIDENCIA DEL PASAJERO'
	, MUNICIPIO VARCHAR(40) NOT NULL COMMENT 'MUNICIPIO DE RESIDENCIA DEL PASAJERO'
	, ESTADO ENUM('1', '0') DEFAULT '1' NOT NULL COMMENT '0 - INACTIVO, 1 - ACTIVO'
	, DISPONIBILIDAD ENUM('1', '0') DEFAULT '1' NOT NULL COMMENT '0 - NO DISPOINBLE, 1 - DISPONIBLE'
	, LATITUD DECIMAL(18,15) NOT NULL DEFAULT 0 COMMENT 'LATITUD DE LA UBICACION ACTUAL'
	, LONGITUD DECIMAL(18,15) NOT NULL DEFAULT 0 COMMENT 'LONGITUD DE LA UBICACION ACTUAL'
	, PRIMARY KEY (ID)
	, CONSTRAINT UN_PASAJEROS_RFC UNIQUE (RFC)
) COMMENT 'REGISTRO DE PASAJEROS'; $$


INSERT INTO PASAJEROS(NOMBRE, APELLIDOPATERNO, APELLIDOMATERNO, RFC, FECHANACIMIENTO, TELEFONO, ENTIDADFEDERATIVA, MUNICIPIO, LATITUD, LONGITUD)
VALUES ('RODRIGO', 'JACOME', 'SARABIA', 'JASR850507QS1', '1985-05-07', '2299456318', 'VERACRUZ', 'VERACRUZ', 19.180187997941744, -96.14277005803963)
		, ('RODRIGO2', 'JACOME2', 'SARABIA2', 'JASR850507QS2', '1985-05-08', '2299456312', 'VERACRUZ', 'VERACRUZ', 19.20029119519505, -96.15603089924288)
		, ('RODRIGO3', 'JACOME3', 'SARABIA3', 'JASR850507QS3', '1985-05-08', '2299456313', 'VERACRUZ', 'VERACRUZ', 19.175121280419923, -96.15440011610309)
		, ('RODRIGO4', 'JACOME4', 'SARABIA4', 'JASR850507QS4', '1985-05-08', '2299456314', 'VERACRUZ', 'VERACRUZ', 19.179863732359912, -96.14298463467891)
		, ('RODRIGO5', 'JACOME5', 'SARABIA5', 'JASR850507QS5', '1985-05-08', '2299456315', 'VERACRUZ', 'VERACRUZ', 19.166933136134254, -96.15306974044839)
		, ('RODRIGO6', 'JACOME6', 'SARABIA6', 'JASR850507QS6', '1985-05-08', '2299456316', 'VERACRUZ', 'VERACRUZ', 19.174188987486694, -96.13701940190462)
		, ('RODRIGO7', 'JACOME7', 'SARABIA7', 'JASR850507QS7', '1985-05-08', '2299456317', 'VERACRUZ', 'VERACRUZ', 19.166730454136136, -96.13435865059523)
		, ('RODRIGO8', 'JACOME8', 'SARABIA8', 'JASR850507QS8', '1985-05-08', '2299456318', 'VERACRUZ', 'VERACRUZ', 19.166000796879466, -96.12611890460487)
;


DELIMITER $$
DROP TABLE IF EXISTS VIAJES $$

CREATE TABLE VIAJES(
	ID INT AUTO_INCREMENT NOT NULL COMMENT 'IDENTIFICADOR DEL VIAJE'
	, ESTADO ENUM('P', 'E', 'C') NOT NULL DEFAULT 'P' COMMENT 'P - PENDIENTE, E - EN PROCESO, C - COMPLETADO'
	, IDPASAJERO INT NOT NULL COMMENT 'IDENTIFICADOR DEL PASAJERO'
	, IDCONDUCTOR INT COMMENT 'IDENTIFICADOR DEL CONDUCTOR'
	, LATITUD DECIMAL(18,15) NOT NULL DEFAULT 0 COMMENT 'LATITUD DE LA UBICACION DE DESTINO'
	, LONGITUD DECIMAL(18,15) NOT NULL DEFAULT 0 COMMENT 'LONGITUD DE LA UBICACION DE DESTINO'
	, FECHACREACION DATETIME NOT NULL DEFAULT NOW() COMMENT 'FECHA DE CREACION DEL VIAJE'
	, FECHAMODIFICACION DATETIME NOT NULL DEFAULT NOW() COMMENT 'FECHA DE MODIFICACION DEL VIAJE'
	, PRIMARY KEY (ID)
	, CONSTRAINT PK_VIAJES_IDPASAJERO FOREIGN KEY (IDPASAJERO) REFERENCES PASAJEROS(ID)
	, CONSTRAINT PK_VIAJES_IDCONDUCTOR FOREIGN KEY (IDCONDUCTOR) REFERENCES CONDUCTORES(ID)
) COMMENT 'REGISTRO DE VIAJES'; $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_CONDUCTORES_R $$

CREATE PROCEDURE USP_CONDUCTORES_R(
	IN PDISPONIBILIDAD VARCHAR(1)
) COMMENT 'OBTENER LISTADO DE CONDUCTORES'
BEGIN 
	SELECT
		c.ID
		, c.NOMBRE 
		, c.RFC
		, c.APELLIDOPATERNO 
		, c.APELLIDOMATERNO 
		, c.RFC
		, c.FECHANACIMIENTO 
		, c.TELEFONO
		, c.ENTIDADFEDERATIVA
		, c.MUNICIPIO
		, c.ESTADO
		, c.DISPONIBILIDAD
		, c.LATITUD
		, c.LONGITUD
	FROM CONDUCTORES c
	WHERE CASE WHEN PDISPONIBILIDAD IS NULL
			THEN 1 = 1
			ELSE c.DISPONIBILIDAD = PDISPONIBILIDAD
		  END
	;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_CONDUCTORES_R_POR_ID $$

CREATE PROCEDURE USP_CONDUCTORES_R_POR_ID(
	IN PID INT
) COMMENT 'OBTENER CONDUCTOR POR ID'
BEGIN 
	SELECT
		c.ID
		, c.NOMBRE 
		, c.RFC
		, c.APELLIDOPATERNO 
		, c.APELLIDOMATERNO 
		, c.RFC
		, c.FECHANACIMIENTO 
		, c.TELEFONO
		, c.ENTIDADFEDERATIVA
		, c.MUNICIPIO
		, c.ESTADO
		, c.DISPONIBILIDAD
		, c.LATITUD
		, c.LONGITUD
	FROM CONDUCTORES c
	WHERE c.ID = PID;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_CONDUCTORES_U $$

CREATE PROCEDURE USP_CONDUCTORES_U(
	IN PID INT
	, IN PDISPONIBILIDAD ENUM('1', '0')
) COMMENT 'ACTUALIZAR INFORMACION DE CONDUCTOR'
BEGIN
	UPDATE CONDUCTORES 
		SET DISPONIBILIDAD = PDISPONIBILIDAD
	WHERE ID = PID;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_PASAJEROS_R $$

CREATE PROCEDURE USP_PASAJEROS_R() 
	COMMENT 'OBTENER LISTADO DE PASAJEROS'
BEGIN 
	SELECT
		p.ID
		, p.NOMBRE 
		, p.RFC
		, p.APELLIDOPATERNO 
		, p.APELLIDOMATERNO 
		, p.RFC
		, p.FECHANACIMIENTO 
		, p.TELEFONO
		, p.ENTIDADFEDERATIVA
		, p.MUNICIPIO
		, p.ESTADO
		, p.DISPONIBILIDAD
		, p.LATITUD
		, p.LONGITUD
	FROM PASAJEROS p;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_PASAJEROS_R_POR_ID $$

CREATE PROCEDURE USP_PASAJEROS_R_POR_ID(
	IN PID INT
) COMMENT 'OBTENER PASAJERO POR ID'
BEGIN 
	SELECT
		p.ID
		, p.NOMBRE 
		, p.RFC
		, p.APELLIDOPATERNO 
		, p.APELLIDOMATERNO 
		, p.RFC
		, p.FECHANACIMIENTO 
		, p.TELEFONO
		, p.ENTIDADFEDERATIVA
		, p.MUNICIPIO
		, p.ESTADO
		, p.DISPONIBILIDAD
		, p.LATITUD
		, p.LONGITUD
	FROM PASAJEROS p
	WHERE p.ID = PID;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_VIAJES_C $$

CREATE PROCEDURE USP_VIAJES_C(
	IN PESTADO ENUM('P', 'E', 'C')
	, IN PIDPASAJERO INT
	, IN PLATITUD DECIMAL(18,15)
	, IN PLONGITUD DECIMAL(18,15)
	, OUT PID INT
) COMMENT 'CREAR VIAJE PARA EL PASAJERO'
BEGIN
	INSERT INTO VIAJES(ESTADO, IDPASAJERO, LATITUD, LONGITUD) 
		VALUES (PESTADO, PIDPASAJERO, PLATITUD, PLONGITUD)
	;

	SET PID = LAST_INSERT_ID();
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_VIAJES_U $$

CREATE PROCEDURE USP_VIAJES_U(
	IN PID INT
	, IN PESTADO ENUM('P', 'E', 'C')
	, IN PIDCONDUCTOR INT
) COMMENT 'ACTUALIZAR INFORMACION DE VIAJES'
BEGIN
	UPDATE VIAJES 
		SET ESTADO = CASE WHEN PESTADO IS NULL THEN ESTADO ELSE PESTADO END
			, IDCONDUCTOR = CASE WHEN PIDCONDUCTOR IS NULL THEN IDCONDUCTOR ELSE PIDCONDUCTOR END
	WHERE ID = PID;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_VIAJES_R $$

CREATE PROCEDURE USP_VIAJES_R()
	COMMENT 'OBTENER LISTADO DE VIAJES ACTIVOS'
BEGIN
	SELECT 
		v.ID 
		, v.ESTADO 
		, v.IDPASAJERO 
		, v.IDCONDUCTOR
		, v.LATITUD
		, v.LONGITUD 
	FROM VIAJES v
	WHERE v.ESTADO = 'E';
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_VIAJES_R_POR_ID $$

CREATE PROCEDURE USP_VIAJES_R_POR_ID(
	IN PID INT
)
	COMMENT 'OBTENER VIAJE POR ID'
BEGIN
	SELECT 
		v.ID 
		, v.ESTADO 
		, v.IDPASAJERO 
		, v.IDCONDUCTOR
		, v.LATITUD
		, v.LONGITUD 
	FROM VIAJES v
	WHERE v.ID = PID;
END $$


DELIMITER $$
DROP PROCEDURE IF EXISTS USP_VIAJES_R_VERIFICAR_EXISTENCIA $$

CREATE PROCEDURE USP_VIAJES_R_VERIFICAR_EXISTENCIA(
	IN PID INT
	, OUT PEXISTE ENUM('0', '1')
) COMMENT 'VERIFICAR EXISTENCIA POR ID'
BEGIN
	SELECT 
		IF(COUNT(v.ID) > 0, '1', '0') INTO PEXISTE
	FROM VIAJES v
	WHERE v.ID = PID;
END $$